name: Build Python Exe

on:
  push:
    tags:
      - '*'

jobs:
  ubuntu-22-04:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Python Exe
      uses: eric2788/pyinstaller-build@master
      with:
        main: swarmsync 
        artifact: swarmsync
        use-dependencies: true
        python_version: 3.10.6
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: swarmsync_${{ github.job }}
        path: dist
      
  ubuntu-20-04:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Python Exe
      uses: eric2788/pyinstaller-build@master
      with:
        main: swarmsync
        artifact: swarmsync
        use-dependencies: true
        python_version: 3.10.6
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: swarmsync_${{ github.job }}
        path: dist
 
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Python Exe
        uses: eric2788/pyinstaller-build@master
        with:
          main: swarmsync
          artifact: swarmsync
          use-dependencies: true
          python_version: 3.10.6
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: swarmsync_${{ github.job }}
          path: dist

  release:
    needs: [ubuntu-22-04, ubuntu-20-04, windows]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
      - name: version
        run: | 
          chmod +x ./swarmsync_ubuntu-22-04/swarmsync
          VERSION=$(./swarmsync_ubuntu-22-04/swarmsync --version)
          echo "version=$VERSION" >> GITHUB_OUTPUT
        id: version
      - name: zip the artifacts
        run: |
          zip -r swarmsync_ubuntu-22-04 swarmsync_ubuntu-22-04
          zip -r swarmsync_ubuntu-20-04 swarmsync_ubuntu-20-04
          zip -r swarmsync_windows swarmsync_windows
      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_OUTPUT
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ steps.previousTag.outputs.previousTag }}
          writeToFile: false
          includeInvalidCommits: true
      - name: release
        uses: ncipollo/release-action@v1.11.2
        id: create_release
        with:
          draft: false
          prerelease: false
          allow_updates: true
          tag: ${{ github.ref }}
          name: ${{ github.tag_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: upload ubuntu 22.04 artifact
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: swarmsync_ubuntu-22-04.zip
          asset_name: swarmsync_ubuntu-22-04.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload ubuntu 20.04 artifact
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: swarmsync_ubuntu-20-04.zip
          asset_name: swarmsync_ubuntu-20-04.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: swarmsync_windows.zip
          asset_name: swarmsync_windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
